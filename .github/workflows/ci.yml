name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - "src/**"
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ${{ github.workspace }}/Student_crud_api

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Remove node_modules and package-lock.json (Cross-Platform)
        shell: bash
        run: |
          echo "Detected OS: $RUNNER_OS"
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "Running on Windows"
            pwsh -Command "Remove-Item -Recurse -Force node_modules, package-lock.json -ErrorAction SilentlyContinue"
          else
            echo "Running on Linux/macOS"
            rm -rf node_modules package-lock.json || echo "Files not found"
          fi

      - name: Install dependencies (Cross-Platform)
        shell: bash
        run: |
          echo "Detected OS: $RUNNER_OS"
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            echo "Installing dependencies on Windows"
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          else
            echo "Installing dependencies on Linux/macOS"
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
          fi

      - name: Check installed modules
        run: ls -l node_modules | grep winston || echo "winston is missing!"

      - name: Set up Docker network
        run: docker network create student_network || true

      - name: Start MongoDB container
        run: docker run -d --network student_network --name mongodb mongo:latest

      - name: Build and test Student CRUD API container
        run: |
          docker build -t student_crud_api .
          docker run --network student_network -e MONGO_URI="mongodb://mongodb:27017/students" -it student_crud_api sh -c "
          npm install --legacy-peer-deps && 
          ls -l node_modules | grep winston || echo 'winston is missing!'; 
          npx jest --runInBand
          "

      - name: Perform code linting
        run: make docker-lint

      - name: Log in to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Push Docker Image
        run: make docker-push
